// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorCalendar
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Projects\Components\BlazorCalendar\BlazorCalendar\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Projects\Components\BlazorCalendar\BlazorCalendar\_Imports.razor"
using Blazorise;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Projects\Components\BlazorCalendar\BlazorCalendar\PDatePicker - Copy.razor"
using DNTPersianUtils.Core;

#line default
#line hidden
#nullable disable
    public partial class PDatePicker___Copy : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 26 "C:\Projects\Components\BlazorCalendar\BlazorCalendar\PDatePicker - Copy.razor"
       

    Dropdown _dropdown;

    [Parameter]
    public DateTime Date { get; set; }



    // DateTime? _date;

    [Parameter]
    public EventCallback<DateTime> DateChanged { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public Size Size { get; set; } = Size.Small;

    [Parameter]
    public string EmptyDateMessage { get; set; } = "";

    [Parameter]
    public bool RenderToday { get; set; } = true;

    [Parameter]
    public Func<DateTime, string> Formatter { get; set; } = (date) => date == DateTime.MinValue ? string.Empty : date.ToShortPersianDateString();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        // _date = Date;
       // if(Date==DateTime.MinValue) Date=DateTime.Now;
    }

    [Parameter]
    public IEnumerable<SpecialDay> SpecialDays { get; set; }=new List<SpecialDay>();

    void Toggle()
    {
        if(Disabled) return;
        _dropdown.Toggle();

    }

    private async Task OnDateChanged(DateTime arg)
    {
        // _date = arg;
        await DateChanged.InvokeAsync(arg);
    }



    private string GetPlaceHolderDateString(DateTime? date)
    {
        if (date is null) return EmptyDateMessage;
        return date == DateTime.MinValue ? EmptyDateMessage : string.Empty;
    }


#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
