@using DNTPersianUtils.Core
    <Addons>

        <Addon AddonType="AddonType.Body">
            <TextEdit Disabled Text="@(Date.ToShortPersianDateString().ToPersianNumbers())" />
        </Addon>
        <Addon AddonType="AddonType.Start">
            <Button Clicked="()=>_dropdown.Toggle()" Color="Color.Secondary">
                <Icon Name="IconName.CalendarDay"></Icon>
            </Button>
            
        </Addon>
        <Dropdown Disabled="Disabled" @ref="@_dropdown">

            <DropdownMenu Padding="Padding.Is0">
              
                <BCalender  SpecialDays="@SpecialDays"  SelectedDate="@Date" SelectedDateChanged="OnDateChanged"/>

            </DropdownMenu>
        </Dropdown>
    </Addons>







    @code {
        Dropdown _dropdown;

        [Parameter]
        public DateTime Date { get; set; } = DateTime.Now;

        [Parameter]
        public EventCallback<DateTime> DateChanged { get; set; }

        [Parameter]
        public bool Disabled { get; set; }

       

        [Parameter]
        public IEnumerable<SpecialDay> SpecialDays { get; set; }=new List<SpecialDay>();

       

        void ToggleCalender()
        {
            _dropdown.Toggle();

        }

        async Task OnDateChanged(DateTime date)
        {
            Date = date;
            _dropdown.Hide();
            await DateChanged.InvokeAsync(date);

        }

        protected override void OnInitialized()
        {
            base.OnInitialized();
            if (Date == DateTime.MinValue)
            {
                Date = DateTime.Now;

            }
        }

        protected override void OnParametersSet()
        {
            base.OnParametersSet();
            if (Date == DateTime.MinValue)
            {
                Date = DateTime.Now;

            }
        }


    }
